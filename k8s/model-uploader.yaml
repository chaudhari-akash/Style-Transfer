apiVersion: batch/v1
kind: Job
metadata:
  name: model-uploader
  namespace: default
spec:
  ttlSecondsAfterFinished: 2
  template:
    spec:
      restartPolicy: OnFailure
      containers:
      - name: uploader-container
        image: python:3.10-slim
        env:
        - name: HF_REPO_ID 
          value: "chaudhariakash/style"

        - name: HF_FILENAME_IN_REPO
          value: "model_state.pth"

        - name: VOLUME_MOUNT_PATH
          value: "/mnt/volume"

        - name: MODEL_DESTINATION_FILENAME_ON_VOLUME 
          value: "model_state.pth" 

        command: ["/bin/bash", "-c"]
        args:
        - |
          set -eux # Exit immediately if a command exits with a non-zero status.
          # Note: Variables defined here with $() are local to this shell script,
          # variables accessed with ${VAR_NAME} are environment variables from the 'env' field above.

          echo "Installing huggingface_hub..."
          # Ensure huggingface_hub is installed (or bake it into a custom uploader image)
          pip install --no-cache-dir huggingface-hub

          echo "Starting model download from public Hugging Face Hub: ${HF_REPO_ID}/${HF_FILENAME_IN_REPO}"
          # Download the file - no token needed for public repos like chaudhariakash/style
          DOWNLOADED_FILE_PATH=$(python -c "from huggingface_hub import hf_hub_download; import os; print(hf_hub_download(repo_id=os.environ['HF_REPO_ID'], filename=os.environ['HF_FILENAME_IN_REPO'], revision='main', cache_dir='/tmp/hf_cache', local_dir_use_symlinks=False))")

          echo "Download complete. Downloaded path: $DOWNLOADED_FILE_PATH"

          # --- Copy the downloaded file to the mounted volume ---
          # Construct the full destination path using the volume mount path and the desired filename on volume
          FULL_DESTINATION_PATH="${VOLUME_MOUNT_PATH}/${MODEL_DESTINATION_FILENAME_ON_VOLUME}"
          echo "Copying model to destination path on volume: ${FULL_DESTINATION_PATH}"

          # Ensure the destination directory on the volume exists
          mkdir -p $(dirname "${FULL_DESTINATION_PATH}")

          # Copy the downloaded file to the mounted volume
          cp "${DOWNLOADED_FILE_PATH}" "${FULL_DESTINATION_PATH}"

          echo "Model copied successfully to volume."
          # Optional: Clean up temporary download cache
          # rm -rf /tmp/hf_cache

        volumeMounts:
        - name: model-storage 
          mountPath: "/mnt/volume" 

      volumes:
      - name: model-storage 
        persistentVolumeClaim:
          claimName: model-pvc 